@model Asset.Models.CreateSubSectionView
<h5 class="text-center p-3">Asset Creation</h5>
<section class="d-flex">
      <div >   <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio1" value="1">
        <label class="form-check-label" for="inlineRadio1"><b>Asset Type</b></label>
    </div>
     <div class="px-3">   <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="2">
        <label class="form-check-label" for="inlineRadio2"><b>Asset Section Type</b></label>
    </div>
    <div class="px-3">    <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="3">
        <label class="form-check-label" for="inlineRadio2"><b>Asset Sub Section Type</b></label>
    </div>
</section>

<form asp-action="CreateSubSection">
<section class="container-fluid bg-light mt-3 py-5">
    <p class="px-2"><b>Asset Type</b></p>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label class="control-label d-flex">Asset Type</label>
                <select class="form-select" id="assetTypeDropdown" aria-label="Asset Type">
                    <option value="">Select Asset Type</option>
                </select>
                 <input type="hidden" id="Asset_Id" name="Asset_Id"  />          
            </div>
            <p class="py-2"><b>Asset Section Type</b></p>
            <div class="row">
              <div class="col-6">
            <div class="form-group">
                <label class="control-label d-flex">Asset Section Type</label>
                <select class="form-select" id="assetTypeDropdown1" aria-label="Asset Section Type">
                <option value="">Select Asset Section Type</option>
            </select>
             <input type="hidden" asp-for="Section_Id" id="Section_Id" name="Section_Id"  />
            </div>
            </div>
            <p class="py-2"><b>Asset Sub Section Type</b></p>
            <div class="row">
                <div class="col-6">
            @* <div class="form-group">
                <label class="control-label d-flex">Sub Section Code</label>
                <input type="t" class="form-control" />*@
            </div> 

            <div class="form-group">
                <label class="control-label d-flex">Sub Section Name</label>
                <input type="text" asp-for="SubSectionName" class="form-control" />
            </div>
        </div>
    </div> 
    <div class="d-inline-flex mt-3">
    <button type="submit" class="btn btn-success">Save</button>
     <a asp-controller="Dashboard" asp-action="Dashboard" class="btn btn-danger mx-3">Cancel</a>
    </div>
</section>
</form>
    <script>
    document.getElementById('assetTypeDropdown1').addEventListener('change', function () {
        const selectedAssetId = this.value; // Get the selected value
        const modelAssetId = document.getElementById('Section_Id'); // Get the hidden input for model's Asset_Id
        if (selectedAssetId !== '') {
            // Set the selectedAssetId as the value of the hidden input field
            modelAssetId.value = selectedAssetId;
            console.log('Selected Asset_ID:', selectedAssetId);

            // Optionally, you can trigger any additional actions here
        } else {
            // Handle the case where "Select Asset Type" is chosen (optional)
            modelAssetId.value = ''; // Clear the value
        }
    });
</script>
    <script>
    // Function to populate the asset type dropdown
    function populateAssetTypeDropdown() {
        console.log("Populating asset type dropdown...");
        const assetTypeDropdown = document.getElementById("assetTypeDropdown");

        // Make an AJAX request to fetch asset types
        fetch("/AssetManagement/sectionjson")
            .then((response) => response.json())
            .then((data) => {
                // Log the retrieved data to the console for debugging
                console.log("Retrieved data:", data);

                // Iterate through the retrieved asset types and add them to the dropdown
                data.forEach((asset) => {
                    const option = document.createElement("option");
                    option.value = asset.assetId; // Use the correct property name
                   // console.log("Asset Id:", asset.AssetId);
                   // console.log("Asset Name:", asset.AssetName);
                    option.text = `${asset.assetId} - ${asset.assetName}`; // Use the correct property name
                    assetTypeDropdown.appendChild(option);
                });
            })
            .catch((error) => {
                // Log any errors to the console for debugging
                console.error("Error fetching asset types: ", error);
            });
    }

    // Call the function to populate the asset type dropdown
    populateAssetTypeDropdown();
</script>

 <script>
    // Function to populate the asset type dropdown
    function populateAssetTypeDropdown() {
        console.log("Populating asset type dropdown...");
        const assetTypeDropdown = document.getElementById("assetTypeDropdown1");

        // Make an AJAX request to fetch asset types
        fetch("/AssetManagement/subsectionjson")
            .then((response) => response.json())
            .then((data) => {
                // Log the retrieved data to the console for debugging
                console.log("Retrieved data:", data);

                // Iterate through the retrieved asset types and add them to the dropdown
                data.forEach((asset) => {
                    const option = document.createElement("option");
                    option.value = asset.sectionId; // Use the correct property name
                   // console.log("Asset Id:", asset.AssetId);
                   // console.log("Asset Name:", asset.AssetName);
                    option.text = `${asset.sectionId} - ${asset.sectionName}`; // Use the correct property name
                    assetTypeDropdown.appendChild(option);
                });
            })
            .catch((error) => {
                // Log any errors to the console for debugging
                console.error("Error fetching asset types: ", error);
            });
    }

    // Call the function to populate the asset type dropdown
    populateAssetTypeDropdown();


</script>
                <script>
    // Get all the radio buttons
    var radioButtons = document.querySelectorAll('input[name="inlineRadioOptions"]');

    // Loop through each radio button and add a click event listener
    radioButtons.forEach(function (radioButton) {
        radioButton.addEventListener('click', function () {
            // Check if this radio button is checked
            if (radioButton.checked) {
                // Get the value of the radio button
                var selectedValue = radioButton.value;

                // Determine the URL to redirect to based on the selected value
                var redirectUrl = '';

                switch (selectedValue) {
                    case '1':
                        redirectUrl = '/AssetManagement/CreateAsset';
                        break;
                    case '2':
                        redirectUrl = '/AssetManagement/CreateSection';
                        break;
                    case '3':
                        redirectUrl = '/AssetManagement/CreateSubSection';
                        break;
                    // Add more cases for other values if needed

                    default:
                        // Handle default case or error
                        break;
                }

                // Redirect to the determined URL
                if (redirectUrl) {
                    window.location.href = redirectUrl;
                }
            }
        });
    });
</script>
<style>
input[type="radio"]:checked {
    background-color: blue; /* Change this to the desired background color */
}
</style>
